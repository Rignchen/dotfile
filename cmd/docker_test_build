#!/bin/bash
# bash script to test docker images
: '
- test file provided & exists
- test shell provided | set to sh
- kill + remove container + image
- open in editor
- build image
if successful:
	- run container
	if successful:
		- clear + display dockerfile
		- open in shell
		- log container
		- kill + remove container
	- remove image
'

# make help message
HELP="Usage: $(basename $0) [flags] <Dockerfile>
Flags:
  -e <key=value>                 Set environment variables
  -h                             Display this help message
  -n <name>                      Name of the container and image (default: docker_test_build)
  -v <host_path:container_path>  Mount volumes when creating a container
  -s <shell>                     Shell to open in the container (default: sh)
"

# extract the flags from the cli arguments
BUILD_FLAG=""
FLAG_NAME="docker_test_build"
SHELL="sh"
while getopts "e:hn:v:s:" opt; do
	case $opt in
		e)
			BUILD_FLAG+="--env $OPTARG "
			;;
		h)
			echo "$HELP"
			exit 0
			;;
		n)
			FLAG_NAME=$OPTARG
			;;
		v)
			BUILD_FLAG+="--volume $OPTARG "
			;;
		s)
			SHELL=$OPTARG
			;;
		\?)
			echo "$HELP" >&2
			exit 1
			;;
	esac
done
shift $((OPTIND -1))

# test if the user has provided a file
DOCKERFILE=$1
if [ -z "$DOCKERFILE" ]; then
	echo "$HELP" >&2
	exit 1
fi

# ensure the container and image do not exist
docker kill $FLAG_NAME
docker rm -f $FLAG_NAME
docker image rm -f $FLAG_NAME

# open in editor
$EDITOR $DOCKERFILE

# test if the file exists
if [ ! -f "$DOCKERFILE" ]; then
	echo "Error: $DOCKERFILE does not exist" >&2
	exit 1
fi

#build and run
docker build -t $FLAG_NAME -f $DOCKERFILE .
if [ $? -eq 0 ]; then
	docker run $BUILD_FLAG -P -d --name $FLAG_NAME $FLAG_NAME
	if [ $? -eq 0 ]; then
# display the content of the dockerfile do it's visible from the shell
		clear
		cat $DOCKERFILE
		echo "===================== ^ FILE ^ ====================="
# open in shell
		docker exec -it $FLAG_NAME $SHELL
# log the container
		echo "===================== ^ SHELL ^ ====================="
		docker logs $FLAG_NAME
		echo "===================== ^ LOGS ^ ====================="
# remove the container
		docker kill $FLAG_NAME
		docker rm -f $FLAG_NAME
	fi
	docker image rm -f $FLAG_NAME
fi

