#!/bin/bash
# bash script to test docker images
: '
- test file provided & exists
- test shell provided | set to sh
- kill + remove container + image
- open in editor
- build image
if successful:
	- run container
	if successful:
		- clear + display dockerfile
		- open in shell
		- log container
		- kill + remove container
	- remove image
'

# make help message
HELP="Usage: $(basename $0) [flags] <Dockerfile> [shell=sh]
Flags:
  -h                             Display this help message
  -v <host_path:container_path>  Mount volumes when creating a container
"

# extract the flags from the cli arguments
BUILD_FLAG=""
FLAG_NAME="docker_test_build"
while getopts "hv:" opt; do
	case $opt in
		h)
			echo "$HELP"
			exit 0
			;;
		v)
			BUILD_FLAG+="--volume $OPTARG "
			;;
		\?)
			echo "$HELP" >&2
			exit 1
			;;
	esac
done
shift $((OPTIND -1))

# test if the user has provided a file
if [ -z "$1" ]; then
	echo "$HELP" >&2
	exit 1
fi

# test if the user has provided a shell
if [ -z "$2" ]; then
	SHELL="sh"
else
	SHELL=$2
fi

# ensure the container and image do not exist
docker kill test_container
docker rm -f test_container
docker image rm -f test_image

# open in editor
$EDITOR $1

# test if the file exists
if [ ! -f "$1" ]; then
	echo "Error: $1 does not exist" >&2
	exit 1
fi

#build and run
docker build -t test_image -f $1 .
if [ $? -eq 0 ]; then
	docker run $BUILD_FLAG -P -d --name test_container test_image
	if [ $? -eq 0 ]; then
# display the content of the dockerfile do it's visible from the shell
		clear
		cat $1
		echo "===================== ^ FILE ^ ====================="
# open in shell
		docker exec -it test_container $SHELL
# log the container
		echo "===================== ^ SHELL ^ ====================="
		docker logs test_container
		echo "===================== ^ LOGS ^ ====================="
# remove the container
		docker kill test_container
		docker rm -f test_container
	fi
	docker image rm -f test_image
fi

